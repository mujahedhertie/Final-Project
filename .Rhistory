cat()
}
mean(USArrests$murder, na.rm = TRUE)
mean(USArrests$assault, na.rm = TRUE)
mean(USArrests$urbanpop, na.rm = TRUE)
mean(USArrests$rape, na.rm = TRUE)
median(USArrests$murder, na.rm = TRUE)
median(USArrests$assault, na.rm = TRUE)
median(USArrests$urbanpop, na.rm = TRUE)
median(USArrests$rape, na.rm = TRUE)
range(USArrests$murder)
range(USArrests$assault)
range(USArrests$urbanpop)
range(USArrests$rape)
summary(USArrests$murder, assault, urbanpop, rape)
summary(USArrests)
summary(USArrests)
ggplot(USArrests) +
geom_bar(aes(y = murder, x = reorder(states, -murder)),
stat = "identity") +
ylab("Murder Rate per 100,000") +
xlab("State") +
ggtitle("Murder Rate in the United States in 1973") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(USArrests) +
geom_bar(aes(y = rape, x = reorder(states, -rape)),
stat = "identity") +
ylab("Rape arrests (per 100,000)") +
xlab("States") +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
coord_flip()
ggplot(USArrests) +
geom_bar(aes(y = rape, x = reorder(states, -rape)),
stat = "identity") +
ylab("Rape arrests (per 100,000)") +
xlab("States") +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
coord_flip()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
ylab("Frequency") +
xlab("Population in % living in urban areas") +
theme_bw()
states <- row.names(USArrests)
barplot(USArrests$murder,
names.arg = states,
las = 2,
ylab = "Murder rate per 100,000 in different states",
main = "Murder rate in the United States in 1973")
barplot(USArrests$murder,
names.arg = reorder(states, -murder),
las = 2,
ylab = "Murder rate per 100,000 in different states",
main = "Murder rate in the United States in 1973")
barplot(USArrests$murder,
names.arg = reorder(states, -Murder),
las = 2,
ylab = "Murder rate per 100,000 in different states",
main = "Murder rate in the United States in 1973")
barplot(USArrests$murder,
names.arg = states,
las = 2,
ylab = "Murder rate per 100,000 in different states",
main = "Murder rate in the United States in 1973")
hist(USArrests$assault,
main = 'Violent Assault by USA States (per 100,000) in 1973',
xlab = 'numeric	 Assault arrests (per 100,000')
hist(USArrests$assault,
main = 'Violent Assault by USA States (per 100,000) in 1973',
xlab = 'numeric	 Assault arrests (per 100,000)',
ylab = 'Number of States'
hist(USArrests$assault,
main = 'Violent Assault by USA States (per 100,000) in 1973',
xlab = 'numeric	 Assault arrests (per 100,000)',
ylab = 'Number of States')
hist(USArrests$assault,
main = 'Violent Assault by USA States (per 100,000) in 1973',
xlab = 'numeric	 Assault arrests (per 100,000)')
library(dplyr)
library(rvest)
install.packages('rvest')
library(rvest)
URL <- http://www.bbc.com/sport/winter-olympics/2014/medals/countries
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
# Get and parse expenses_table from the webpage
MedalTable <- URL %>% read_html() %>%
html_nodes('#medals-table') %>%
html_table() %>%
as.data.frame
View(MedalTable)
# Get and parse expenses_table from the webpage
MedalsTable <- URL %>% read_html() %>%
html_nodes('medals-table') %>%
html_table() %>%
as.data.frame
View(MedalsTable)
MedalsTable <- URL %>% read_html() %>%
html_nodes('medals-table__table') %>%
html_table() %>%
as.data.frame
View(MedalsTable)
MedalsTable <- URL %>% read_html() %>%
html_nodes('#medals-table__table') %>%
html_table() %>%
as.data.frame
View(MedalsTable)
rm(list = ls())
library(dplyr)
library(rvest)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
MedalsTable <- URL %>% read_html() %>%
html_nodes('#orb-nav-links') %>%
html_table() %>%
as.data.frame
MedalsTable <- URL %>% read_html() %>%
html_nodes('#medals_table') %>%
html_table() %>%
as.data.frame
html_nodes('#medals__table') %>%
MedalsTable <- URL %>% read_html() %>%
html_nodes('#medals__table') %>%
html_table() %>%
as.data.frame
MedalsTable <- URL %>% read_html() %>%
html_nodes('#medals_table__table') %>%
html_table() %>%
as.data.frame
MedalsTable <- URL %>% read_html() %>%
html_nodes('#orb-nav-links') %>%
html_table() %>%
as.data.frame
MedalsTable <- URL %>% read_html() %>%
html_nodes('#medals-table__total--silver') %>%
html_table() %>%
as.data.frame
MedalsTable <- URL %>% read_html() %>%
html_nodes('#table') %>%
html_table() %>%
as.data.frame
# Get and parse expenses_table from the webpage
MedalsTable <- URL %>% read_html() %>%
html_nodes('table') %>%
html_table() %>%
as.data.frame
View(MedalsTable)
head(MedalsTable)
drop(NA.$MedalsTable)
drop(MedalsTable$NA.)
head(MedalsTable)
MedalsTable$NA. <- NULL
head(MedalsTable)
MedalsTable <- URL %>% read_html() %>%
html_nodes('table') %>%
html_table() %>%
as.data.frame
head(MedalsTable)
View(MedalsTable)
MedalsTable$NA. <- NULL
View(MedalsTable)
TotalMedals <- arrange(MedalsTable, desc(Total))
head(TotalMedals)
tables <- URL %>% read_html() %>%
html_nodes('table') %>%
html_table()
possible_dir <- c('C:/Users/Johannes SK/Dropbox/Studium/Spring2016/CollaborativeResearch/Assignment02',
'C:/Users/User/Documents/GitHub/Assignment02')
toBibtex(citation())
# Saxony Anhalt 2016
sa16 <- read.csv('http://www.statistik.sachsen-anhalt.de/wahlen/lt16/erg/csv/lt16dat2.csv',
sep = ';')
View(sa16)
rp16 <- read.csv('Data_Files/wahlnachtanalyse-lw2016_page_65.csv', header = FALSE, sep = ';')
trees <- c('Jomon Sugi', 'Huon Pine')
View(trees)
str_split_fixed(trees, pattern = ' ', n = 2)
library(stringr)
str_split_fixed(trees, pattern = ' ', n = 2)
View(trees)
str_split_fixed(trees, pattern = ' ', n = 2)
trees2 <- data.frame[str_split_fixed(trees, pattern = ' ', n = 2)]
trees2 <- str_split_fixed(trees, pattern = ' ', n = 2)
View(trees2)
trees <- c('1 Sugi', '2 Pine')
View(trees)
trees <- c('1 Sugi', '2 Pine')
View(trees)
trees2 <- str_split_fixed(trees, pattern = ' ', n = 2)
View(trees2)
rp16 <- source_XlsxData('http://www.wahlen.rlp.de/ltw/wahlen/2016_Landtagswahlergebnisse_Wahlkreise_Endgueltig.xlsx',
2, cache = TRUE)
library(xlsx)
rp16 <- source_XlsxData('http://www.wahlen.rlp.de/ltw/wahlen/2016_Landtagswahlergebnisse_Wahlkreise_Endgueltig.xlsx',
2, cache = TRUE)
rp16 <- source_XlsxData('http://www.wahlen.rlp.de/ltw/wahlen/2016_Landtagswahlergebnisse_Wahlkreise_Endgueltig.xlsx',
2, cache = TRUE)
library(xlsx)
rp16 <- source_XlsxData('http://www.wahlen.rlp.de/ltw/wahlen/2016_Landtagswahlergebnisse_Wahlkreise_Endgueltig.xlsx',
2, cache = TRUE)
library(repmis)
library(rio)
rp16 <- source_XlsxData('http://www.wahlen.rlp.de/ltw/wahlen/2016_Landtagswahlergebnisse_Wahlkreise_Endgueltig.xlsx',
2, cache = TRUE)
View(rp16)
rp16 <- source_XlsxData('http://www.wahlen.rlp.de/ltw/wahlen/2016_Landtagswahlergebnisse_Wahlkreise_Endgueltig.xlsx',
2, cache = TRUE)
rp16 <- import('http://www.wahlen.rlp.de/ltw/wahlen/2016_Landtagswahlergebnisse_Wahlkreise_Endgueltig.xlsx',
2, cache = TRUE)
rp16 <- import('http://www.wahlen.rlp.de/ltw/wahlen/2016_Landtagswahlergebnisse_Wahlkreise_Endgueltig.xlsx', format = xlsx,
2, cache = TRUE)
2, cache = TRUE)
rp16 <- import('http://www.wahlen.rlp.de/ltw/wahlen/2016_Landtagswahlergebnisse_Wahlkreise_Endgueltig.xlsx', format = 'xlsx',
2, cache = TRUE)
rp16 <- import('http://www.wahlen.rlp.de/ltw/wahlen/2016_Landtagswahlergebnisse_Wahlkreise_Endgueltig.xlsx', format = 'xlsx',
2)
View(rp16)
rp16 <- import('http://www.wahlen.rlp.de/ltw/wahlen/2016_Landtagswahlergebnisse_Wahlkreise_Endgueltig.xlsx', format = 'xlsx',
sheetIndex = 2)
View(Data)
View(Data.Rda)
load(Data.Rda)
possible_dir <- c('C:/Users/Johannes SK/Dropbox/Studium/Spring2016/CollaborativeResearch/Final-Project',
'C:/Users/User/Documents/GitHub/Final-Project')
set_valid_wd(possible_dir) # Set to first valid directory in the possible_dir vector
rm(possible_dir) # remove possible_dir vector
load("Data.Rda") # Load data file
rm(list = ls())
rm(list = ls())
## 1.2 Load packages for dataset creation
# Create vector of used packages
packages <- c('repmis', 'rvest', 'plyr', 'rio', 'xlsx')
# Install packages that are not already installed
for (p in packages) {
if (p %in% installed.packages()[,1]) require(p, character.only=TRUE)
else {
install.packages(p)
require(p, character.only=TRUE)
}
}
rm(p)
# Load packages
loaded <- lapply(packages, require, character.only = TRUE)
rm(loaded)
## 1.3 Set the working directory
# Create list of commonly used working directories (update, if needed)
possible_dir <- c('C:/Users/Johannes SK/Dropbox/Studium/Spring2016/CollaborativeResearch/Final-Project',
'C:/Users/User/Documents/GitHub/Final-Project')
# Set to first valid directory in the possible_dir vector
set_valid_wd(possible_dir)
# remove possible_dir vector
rm(possible_dir)
## 1.4 Create bibTeX file for the used packages
LoadandCite(packages, file = 'Packages1.bib')
rm(packages)
#-----------------------------------
source("data_gathering/election_data_gathering.R")
rm(list = ls())
source("data_gathering/structural_data_gathering.R")
# Delete unnecessary columns
size <- size_raw[, c(2, 4)]
# Rename columns
names(size) <- c("ID", "district.size")
# Convert ID to numeric
size$ID <- as.numeric(as.character(size$ID))
# Remove raw data from environment
rm(size_raw)
# Delete unnecessary columns
edu <- edu_raw[, c(2, 4, 6, 14)]
# Rename columns
names(edu) <- c("ID", "school.leaver", "nodegree", "abitur")
# Convert ID to numeric
edu$ID <- as.numeric(as.character(edu$ID))
# Create nodegree.ratio
edu$nodegree.ratio <- edu$nodegree/edu$school.leaver*100
# Create abitur.ratio
edu$abitur.ratio <- edu$abitur/edu$school.leaver*100
# Delete used columns
edu$nodegree      <- NULL
edu$abitur        <- NULL
edu$school.leaver <- NULL
# Remove raw data from environment
rm(edu_raw)
View(size)
View(edu)
View(unemp_raw)
unemp <- unemp_raw[, c(2, 12)]
# Delete unnecessary rows
unemp <- unemp[-c(1:9), ]
# Rename columns
names(unemp) <- c("ID", "unempl.rate")
rm(unemp_raw)
View(unemp)
unemp$ID <- as.numeric(as.character(unemp$ID))  # convert ID to numeric
unemp$unempl.rate <- as.character(unemp$unempl.rate)  # convert unempl.rate to character
unemp$unempl.rate <- gsub(",", ".", x = unemp$unempl.rate)  # replace commas with periods
unemp$unempl.rate <- as.numeric(unemp$unempl.rate)  # convert unempl.rate to numeric
View(gdp_raw)
gdp <- gdp_raw[, c(2, 6)]
# Rename columns
names(gdp) <- c("ID", "GDP.capita")
rm(gdp_raw)
View(gdp)
gdp_raw <- read.csv("data_raw/426-71-4.csv",
header = FALSE,
sep = ";",
na.strings = c("-", ".", "..."),
skip = 9,
nrows = 525)
gdp <- gdp_raw[, c(2, 6)]
# Rename columns
names(gdp) <- c("ID", "GDP.capita")
rm(gdp_raw)
gdp$ID <- as.numeric(as.character(gdp$ID))  # Convert ID to numeric
View(edu)
View(size)
View(unemp)
#######################################################################
# MPP-E1180: Introduction to Collaborative Social Science Data Analysis
# Collaborative Research Project
# Structural Data Gathering
# Johannes Schulz-Knappe
# Update 15 May 2016
# Hertie School of Governance
#######################################################################
#-----------------------------------------#
# 1. Prepare the workspace                #
#-----------------------------------------#
# Run "1_Data.R" for workspace preparation
#-----------------------------------------#
# 2. Retrieve structura data              #
#-----------------------------------------#
# The data on structural characteristics of the districts is manually
# retrieved from https://www.regionalstatistik.de/genesis/online, as the
# Federal Statistical Office does not provide an API.
# We use the data files 171-01-4 (District Size), 192-71-4 (Education), 659-71-4 (Unemployment),
# 426-71-4 (GDP per Capita), 335-31-4 (Number of Asylum Seekers), and 358-61-4 (Public Debt).
# The downloaded csv files are stored under '/data_raw' in the working directory
## 2.1 District size
# Table 171-01-4, downloaded on 13/5/2016, selected time = 2014
size_raw <- read.csv("data_raw/171-01-4.csv",
header = FALSE,
sep = ";",
na.strings = c("-","."),
col.names = c("date", "district.ID", "district.name",
"space"),
skip = 7,
nrows = 524,
dec=",")
## 2.2 Education
# Table 192-71-4, downloaded on 13/5
edu_raw <- read.csv("data_raw/192-71-4.csv",
header = FALSE,
sep = ";",
na.strings = c("-","."),
skip = 11,
nrows = 524,
dec=",")
## 2.3 Unemployment rate
# Table 659-71-4, downloaded 13/5/2016, selected time = 2014
# Import the csv file
unemp_raw <- read.csv("data_raw/659-71-4.csv",
header = FALSE,
sep = ";",
na.strings = c("-","."),
nrows = 533,
dec = ",")
## 2.4 GDP per capita
# Table 426-71-4, downloaded 13/5/2016, selected time = 2013
# Import the csv file
gdp_raw <- read.csv("data_raw/426-71-4.csv",
header = FALSE,
sep = ";",
na.strings = c("-", ".", "..."),
skip = 10,
nrows = 524)
## 2.5 Number of asylum seekers
# Table 335-31-4, downloaded 13/5/2016, selected time = 2013
# Import the csv file
refugee_raw <- read.csv("data_raw/335-31-4.csv",
header = FALSE,
sep = ";",
na.strings = c("-","."),
skip = 8,
nrows = 525,
dec = ",")
## 2.6 District public debt
# Table 358-61-4, downloaded 13/5/2016, selected time = 2009
# Import the csv file
debt_raw <- read.csv("data_raw/358-61-4.csv",
header = FALSE,
sep = ";",
na.strings = c("-","."),
col.names = c("date", "district.ID", "district.name",
"public.debt", "public.loan.debt", "indep.inst.debt",
"local.hospital.debt"),
skip = 6,
nrows = 525,
dec = ",")
#-----------------------------------------#
# 1. Prepare the workspace                #
#-----------------------------------------#
# Run "1_Data.R" for workspace preparation
#-----------------------------------------#
# 2. Cleaning structural data             #
#-----------------------------------------#
## 2.1 District size
# Delete unnecessary columns
size <- size_raw[, c(2, 4)]
# Rename columns
names(size) <- c("ID", "district.size")
# Convert ID to numeric
size$ID <- as.numeric(as.character(size$ID))
# Remove raw data from environment
rm(size_raw)
## 2.2 Education
# Delete unnecessary columns
edu <- edu_raw[, c(2, 4, 6, 14)]
# Rename columns
names(edu) <- c("ID", "school.leaver", "nodegree", "abitur")
# Convert ID to numeric
edu$ID <- as.numeric(as.character(edu$ID))
# Create nodegree.ratio
edu$nodegree.ratio <- edu$nodegree/edu$school.leaver*100
# Create abitur.ratio
edu$abitur.ratio <- edu$abitur/edu$school.leaver*100
# Delete used columns
edu$nodegree      <- NULL
edu$abitur        <- NULL
edu$school.leaver <- NULL
# Remove raw data from environment
rm(edu_raw)
## 2.3 Unemployment rate
# Keep necessary columns
unemp <- unemp_raw[, c(2, 12)]
# Delete unnecessary rows
unemp <- unemp[-c(1:9), ]
# Rename columns
names(unemp) <- c("ID", "unempl.rate")
# Convert variables
unemp$ID <- as.numeric(as.character(unemp$ID))  # convert ID to numeric
unemp$unempl.rate <- as.character(unemp$unempl.rate)  # convert unempl.rate to character
unemp$unempl.rate <- gsub(",", ".", x = unemp$unempl.rate)  # replace commas with periods
unemp$unempl.rate <- as.numeric(unemp$unempl.rate)  # convert unempl.rate to numeric
# Remove raw data from environment
rm(unemp_raw)
View(unemp)
View(size)
View(edu)
gdp <- gdp_raw[, c(2, 6)]
# Rename columns
names(gdp) <- c("ID", "GDP.capita")
View(gdp)
gdp$ID <- as.numeric(as.character(gdp$ID))  # Convert ID to numeric
gdp$GDP.capita <- as.character(gdp$GDP.capita)  # convert GDP.capita to character
gdp$GDP.capita <- gsub(",", ".", x = gdp$GDP.capita)  # replace commas with periods
gdp$GDP.capita <- as.numeric(gdp$GDP.capita)  # convert GDP.capita to numeric
gdp$GDP.capita <- gdp$GDP.capita/1000 # divide by thousand for better readability
rm(gdp_raw)
View(refugee_raw)
refugee <- refugee_raw[, c(2, 4)]
rm(refugee_raw)
names(refugee) <- c("ID", "n.refugees")
View(refugee)
refugee$ID <- as.numeric(as.character(refugee$ID))
refugee_raw <- read.csv("data_raw/335-31-4.csv",
header = FALSE,
sep = ";",
na.strings = c("-","."),
skip = 9,
nrows = 524,
dec = ",")
# Import the csv file
debt_raw <- read.csv("data_raw/358-61-4.csv",
header = FALSE,
sep = ";",
na.strings = c("-","."),
col.names = c("date", "district.ID", "district.name",
"public.debt", "public.loan.debt", "indep.inst.debt",
"local.hospital.debt"),
skip = 7,
nrows = 524,
dec = ",")
refugee <- refugee_raw[, c(2, 4)]
# Rename columns
names(refugee) <- c("ID", "n.refugees")
# Convert ID to numeric
refugee$ID <- as.numeric(as.character(refugee$ID))
# Remove raw data from environment
rm(refugee_raw)
refugee$ID <- as.numeric(as.character(refugee$ID))
refugee_raw <- read.csv("data_raw/335-31-4.csv",
header = FALSE,
sep = ";",
na.strings = c("-","."),
skip = 9,
nrows = 524,
dec = ",")
View(refugee_raw)
refugee <- refugee_raw[, c(2, 4)]
names(refugee) <- c("ID", "n.refugees")
rm(refugee_raw)
View(debt_raw)
debt <- debt_raw[, c(2, 4)]
# Rename columns
names(debt) <- c("ID", "public.debt")
View(debt)
rm(debt_raw)
